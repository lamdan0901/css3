// 5 Modules
// @use 'variables';

// 4. Partials (import and use partial)
// @import 'reset';

// 2. Variables
$primary-color: black;
$secondary-color: rgb(106, 187, 106);
$font-stack: Helvetica, sans-serif;

body {
  color: $primary-color;
  font-family: $font-stack;
  // background-color: variables.$primary-color2;
}

// 3. Nesting
nav {
  &+ul {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  &>li {
    display: inline-block;
    color: $secondary-color;

    &>a {
      display: block;
      padding: 6px 12px;
      text-decoration: none;
    }
  }

}

// Nesting with Parent Selector (&)
.btn {
  background: blue;
  color: white;

  &:hover {
    // .btn:hover
    background: darkblue;
  }

  &--primary {
    //.btn--primary
    background: green;
  }
}

// Nesting with Nesting Properties
.widget {
  font: {
    size: 12px;
    weight: bold;
    family: sans-serif;
  }

  // =>>
  // font-size: 12px;
  // font-weight: bold;
  // font-family: sans-serif;
}


// 6. Mixins
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

// If an argument is not passed 
// when the mixin is included, 
// the default value is used.
@mixin default-value-border-radius($radius: 5px) {
  border-radius: $radius;
}

@mixin center-text {
  text-align: center;
  vertical-align: middle;
}

.box {
  @include default-value-border-radius(15px);
  @include center-text;
  background-color: rgb(39, 116, 184);
  width: 500px;
  height: 50px;
  margin: 10px;
  color: white;
}

// 7. Extend/Inheritance
.message {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success-msg {
  @extend .message;
  border-color: green;
}

.error-msg {
  @extend .message;
  border-color: red;
}

// Extending Placeholders
// They are like classes, but they don't 
// get compiled to CSS on their own. 
// They only get output when extended.
%button-shared {
  padding: 10px 15px;
  border: 1px solid #ccc;
  background-color: white;
}

.button-primary {
  @extend %button-shared;
  background-color: blue;
  color: white;
}

.button-secondary {
  @extend %button-shared;
  background-color: red;
  color: white;
}

// 8. Operators
.container {
  width: 100%;
  margin: 0 auto;
}

article[role="main"] {
  float: left;
  width: calc(100% / 2) * 100%;
  // we can do calculation without calc but that
  // feature will be deprecated soon
  // we can also use math.div()

  // Use calc() if you need to perform calculations
  // involving relative units like percentages, 
  // viewport units, etc., which might not be known until the page is rendered. 
  // For other cases, especially with known values, 
  // math.div() is more efficient.
}

article[role="complementary"] {
  float: right;
  width: math.div(300px, 960px) * 100%;
}